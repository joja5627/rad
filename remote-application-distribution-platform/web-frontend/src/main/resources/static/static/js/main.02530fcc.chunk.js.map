{"version":3,"sources":["utils/constants.js","images/repair.svg","report/resultQuickview.js","report/Test.js","report/Category.js","report/Analysis.js","report/report.js","utils/HttpUtils.js","configFields/NumberField.js","configFields/IPField.js","configFields/ClassificationField.js","configFields/BooleanField.js","App.js","index.js"],"names":["module","exports","Status","PASS","FAIL","RESOLVED","WORKAROUND","Categories","CONFIG","SERVICES","MISC","HttpConstants","LOCALHOST","Endpoints","GET_CONFIG","INITIATE_TESTS","EXIT","__webpack_require__","p","ResultQuickview","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleClickedButton","page","props","changePage","returnSoloButton","console","log","react_default","a","createElement","className","values","src","repair","alt","inherits","createClass","key","value","_this2","style","width","onClick","Component","Test","handleClick","e","currentState","state","expanded","setState","returnAdvacedStatusInfo","status","entities","keys","map","expandAll","prevProps","iconString","statusString","number","name","description","message","splitStatus","undefined","Category","id","tests","test","Test_Test","Analysis","categorizeTests","categories","_loop","c","data","filter","category","push","Category_Category","ApplicationServer","DatabaseServer","PCWS1","PCWS2","PCWS3","Report","fullDataSet","filteredData","toConsumableArray","unwrap","el","parent","parentNode","firstChild","insertBefore","removeChild","wrapAll","elms","wrapper","sibling","nextSibling","appendChild","shift","expandAllTests","getToolbarValues","result","s","toolbarValues","resultQuickview_ResultQuickview","Analysis_Analysis","fetchFields","mode","cache","credentials","redirect","referrer","post","_x","_x2","_post","_callee","url","regenerator_default","wrap","_context","prev","next","abrupt","fetch","objectSpread","method","headers","Content-Type","body","JSON","stringify","stop","_callee2","_context2","Accept","NumberField","validateChange","preventDefault","target","isNaN","maxLength","Math","pow","updateValue","field","reason","placeholder","onChange","htmlFor","IPField","ClassificationField","required","hidden","BooleanField","trueAdj","falseAdj","App","exit","_ref","asyncToGenerator","mark","HttpUtils","window","location","port","then","response","json","results","catch","error","close","runTests","_ref2","testsInitiated","config","testsDone","testData","defineProperty","server","invalidFormMsg","_x3","_get","userConfigFields","serverType","getConfigFields","_this3","report_report","listStyleType","color","split","msg","fieldType","toLowerCase","configFields_ClassificationField","configFields_BooleanField","configFields_IPField","configFields_NumberField","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.02530fcc.chunk.js","sourcesContent":["module.exports.Status = {\r\n  PASS: \"Pass\",\r\n  FAIL: \"Fail\",\r\n  RESOLVED: \"Resolved\",\r\n  WORKAROUND: \"Workaround\"\r\n};\r\nmodule.exports.Categories = {\r\n  CONFIG: \"Configuration\",\r\n  SERVICES: \"Services\",\r\n  MISC: \"Misc\"\r\n};\r\nmodule.exports.HttpConstants = {\r\n  LOCALHOST: \"http://localhost:\"\r\n};\r\nmodule.exports.Endpoints = {\r\n  GET_CONFIG: \"/api/v1/getConfig\",\r\n  INITIATE_TESTS: \"/api/v1/run\",\r\n  EXIT: \"/api/v1/exit\"\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/repair.f1d99ca9.svg\";","import React, { Component } from 'react';\r\nimport './resultQuickview.css'\r\nimport repair from '../images/repair.svg'\r\nimport {Status} from '../utils/constants'\r\n\r\nexport class ResultQuickview extends Component{\r\n    handleClickedButton = (page) => {\r\n        this.props.changePage(page)\r\n    }\r\n\r\n    returnSoloButton = (page) => {\r\n        console.log(page)\r\n        switch(page){\r\n            case Status.FAIL:\r\n                return (<span className=\"soloButton fail\">\r\n                    <div className=\"count\"><span className=\"statusIcon\"><i className=\"fa fa-times-circle fa-lg\"></i></span><span>{this.props.values[Status.FAIL]}</span></div>\r\n                    <span className=\"status\">Failed</span>\r\n                </span>)\r\n            case Status.PASS:\r\n                return(<span className=\"soloButton pass\">\r\n                    <div className=\"count\"><span className=\"statusIcon\"><i className=\"fa fa-check-circle fa-lg\"></i></span><span>{this.props.values[Status.PASS]}</span>\r\n                    </div>\r\n                    <span className=\"status\">Passed</span>\r\n                </span>)\r\n            case Status.RESOLVED:\r\n                return(<span className=\"soloButton resolved\">\r\n                        <div className=\"count\"><span className=\"statusIcon\"><img src={repair} alt=\"resolved\"/></span><span>{this.props.values[Status.RESOLVED]}</span></div>\r\n                    <span className=\"status\">Resolved</span>\r\n                </span>\r\n                )\r\n            case Status.WORKAROUND:\r\n                return(<span className=\"soloButton workaround\">\r\n                        <div className=\"count\"><span className=\"statusIcon\"><i className=\"fa fa-exclamation-triangle fa-lg\"></i></span><span>{this.props.values[Status.WORKAROUND]}</span></div>\r\n                    <span className=\"status\">Workaround</span>\r\n                </span>\r\n                )\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (this.props.page === null ?\r\n            <div style={{width: '100%'}}>\r\n                <span className=\"button pass\" onClick={() => this.handleClickedButton(Status.PASS)}>\r\n                    <div className=\"count\"><span className=\"statusIcon\"><i className=\"fa fa-check-circle fa-lg\"></i></span><span>{this.props.values[Status.PASS]}</span>\r\n                    </div>\r\n                    <span className=\"status\">Passed</span>\r\n                </span>\r\n                <span className=\"button fail\" onClick={() => this.handleClickedButton(Status.FAIL)}>\r\n                    <div className=\"count\"><span className=\"statusIcon\"><i className=\"fa fa-times-circle fa-lg\"></i></span><span>{this.props.values[Status.FAIL]}</span></div>\r\n                    <span className=\"status\">Failed</span>\r\n                </span>\r\n                <span className=\"button resolved\" onClick={() => this.handleClickedButton(Status.RESOLVED)}>\r\n                    <div className=\"count\"><span className=\"statusIcon\"><img src={repair} alt=\"resolved\"/></span><span>{this.props.values[Status.RESOLVED]}</span></div>\r\n                    <span className=\"status\">Resolved</span>\r\n                </span>\r\n                <span className=\"button workaround\" onClick={() => this.handleClickedButton(Status.WORKAROUND)}>\r\n                    <div className=\"count\"><span className=\"statusIcon\"><i className=\"fa fa-exclamation-triangle fa-lg\"></i></span><span>{this.props.values[Status.WORKAROUND]}</span></div>\r\n                    <span className=\"status\">Workaround</span>\r\n                </span>\r\n            </div>\r\n                :\r\n            <div style={{width: '100%'}}>\r\n                <span className=\"backbutton\" onClick={() => this.handleClickedButton(null)}>\r\n                    <i className=\"fa fa-arrow-circle-o-left\"></i><b><i>Full Report</i></b></span>\r\n                {this.returnSoloButton(this.props.page)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './tests.css'\r\n\r\nexport class Test extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        if(this.props.expandAll){\r\n            this.state = {\r\n                expanded: true\r\n            }\r\n        }\r\n        else {\r\n            this.state = {\r\n                expanded: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        //expanding all for export\r\n        if(!prevProps.expandAll && this.props.expandAll){\r\n            this.setState({\r\n                expanded: true\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        const currentState = this.state.expanded\r\n        this.setState({\r\n            expanded: !currentState\r\n        })\r\n    }\r\n\r\n    returnAdvacedStatusInfo = (status) => {\r\n        const entities = Object.keys(status)\r\n        let table = <table className=\"statusTable\">\r\n            <tbody>\r\n            <tr>\r\n                {entities.map((e) => {\r\n                    return <th key={e}>{e}</th>\r\n                })}\r\n            </tr>\r\n            <tr>\r\n                {entities.map((e) => {\r\n                    return <td key={e} className={\"tableEntry \" + status[e].status}>{status[e].status}</td>\r\n                })}\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n        return table\r\n    }\r\n\r\n    render(){\r\n        const iconString = this.state.expanded ? 'icon fa fa-chevron-circle-up' : 'icon fa fa-chevron-circle-down'\r\n        let statusString = 'testStatus ' + this.props.status\r\n        return (\r\n            <div className=\"test\">\r\n                <span className=\"testNum\">\r\n                    {/*<span className={\"circle \" + this.props.status}></span>*/}\r\n                    <i className={iconString} onClick={this.handleClick}></i><b>Test {this.props.number}:</b>\r\n                    <span className={\"circle \" + this.props.status}></span>\r\n                </span>\r\n                {this.props.name} <span className={statusString}><b> {this.props.status} </b></span>\r\n                {this.state.expanded ? <div className=\"moreInfo\">\r\n                    DETAILED TEST INFORMATION: {this.props.description + '. '}\r\n                    <p>{this.props.message}</p>\r\n                    {this.props.splitStatus !== null && this.props.splitStatus !== undefined ?\r\n                       this.returnAdvacedStatusInfo(this.props.splitStatus) : null}\r\n                </div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Test} from './Test'\r\nimport './category.css'\r\n\r\nexport class Category extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        console.log(this.props.name)\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        //expanding all for export\r\n        if(!prevProps.expandAll && this.props.expandAll){\r\n            this.setState({\r\n                expanded: true\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        const currentState = this.state.expanded\r\n        this.setState({\r\n            expanded: !currentState\r\n        })\r\n        // let elem = e.target.parentElement.parentElement\r\n        // if(elem && elem.children){\r\n        //     const len = elem.children.length\r\n        //     elem = elem.children[len-1]\r\n        //     if(currentState)\r\n        //         elem.classList.remove(\"show\")\r\n        //     else\r\n        //         elem.classList.add(\"show\")\r\n        // }\r\n    }\r\n\r\n    render(){\r\n        const iconString = this.state.expanded ? 'icon fa fa-chevron-circle-up' : 'icon fa fa-chevron-circle-down'\r\n        return (\r\n            <div className=\"cat\" id={this.props.name}>\r\n                <i className={iconString} onClick={this.handleClick}></i><b>{this.props.name}</b>\r\n                <ul className=\"testList\">\r\n                {\r\n                    this.state.expanded ?\r\n                            this.props.tests.map((test) =>{\r\n                                return (<li key={test.number}>\r\n                                    <Test number={test.number} name={test.name} description={test.description} status={test.status}\r\n                                          message={test.message} splitStatus={test.splitStatus} expandAll={this.props.expandAll}/>\r\n                                </li>)\r\n                            })\r\n                            :\r\n                        null\r\n                }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './analysis.css'\r\nimport {Categories} from '../utils/constants'\r\nimport {Category} from './Category'\r\n\r\nexport class Analysis extends Component{\r\n\r\n    categorizeTests = (tests) => {\r\n        let categories = []\r\n        for(let c in Categories){\r\n            const data = tests.filter((test) => {\r\n                return test.category === Categories[c]\r\n            })\r\n            console.log(data)\r\n            categories.push(<Category key={Categories[c]} name={Categories[c]} tests={data} expandAll={this.props.expandAll}/>)\r\n        }\r\n        console.log(categories)\r\n        return categories\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"analysis\">\r\n                <header className=\"analysisHeader\">\r\n                    <h2>Analysis</h2>\r\n                </header>\r\n                <ul className=\"categories\">\r\n                {\r\n                    this.categorizeTests(this.props.tests)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { ResultQuickview } from \"./resultQuickview\";\r\nimport { Analysis } from \"./Analysis\";\r\nimport \"./report.css\";\r\nimport { Status, Categories } from \"../utils/constants\";\r\n\r\nconst data = [\r\n  {\r\n    number: \"5.1\",\r\n    name: \"Registry Configuration Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"5.2\",\r\n    name: \"Verify GCCS-M User Accounts Created in GL\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"5.3\",\r\n    name: \"IP Configuration Verification\",\r\n    status: Status.FAIL,\r\n    category: Categories.CONFIG,\r\n    splitStatus: {\r\n      ApplicationServer: { status: Status.PASS },\r\n      DatabaseServer: { status: Status.RESOLVED },\r\n      PCWS1: { status: Status.WORKAROUND },\r\n      PCWS2: { status: Status.FAIL },\r\n      PCWS3: { status: Status.PASS }\r\n    }\r\n  },\r\n  {\r\n    number: \"5.4\",\r\n    name: \"Services Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"5.5\",\r\n    name: \"Ownship Configuration Verification\",\r\n    status: Status.FAIL,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"5.6\",\r\n    name: \"Overlays Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"5.7\",\r\n    name: \"AIF Management Web page Accessibility Verification\",\r\n    status: Status.RESOLVED,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"5.8\",\r\n    name: \"LINK11 Configuration and Interface Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.1\",\r\n    name: \"DNS Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.2.1\",\r\n    name: \"Aegis /etc/hosts Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.2.2\",\r\n    name: \"Start Tracks Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"6.2.3\",\r\n    name: \"Start Aegis-GL Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"6.2.4\",\r\n    name: \"GCCS-M/Aegis Display System (ADS) Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"6.3\",\r\n    name: \"Adaptor NAVSSI Configuration Verification\",\r\n    status: Status.RESOLVED,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.4\",\r\n    name: \"CADRT/TDSS via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.5\",\r\n    name: \"SSEE using ESPRIT via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.6\",\r\n    name: \"COMMS Interface Verification (CST)\",\r\n    status: Status.FAIL,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"6.7\",\r\n    name: \"NFCS Interface Verification (CST)\",\r\n    status: Status.PASS,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"21\",\r\n    name: \"Aegis /etc/hosts Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"22\",\r\n    name: \"Start Tracks Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"23\",\r\n    name: \"Start Aegis-GL Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"24\",\r\n    name: \"GCCS-M/Aegis Display System (ADS) Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"63\",\r\n    name: \"Adaptor NAVSSI Configuration Verification\",\r\n    status: Status.RESOLVED,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"64\",\r\n    name: \"CADRT/TDSS via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"65\",\r\n    name: \"SSEE using ESPRIT via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"66\",\r\n    name: \"COMMS Interface Verification (CST)\",\r\n    status: Status.FAIL,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"627\",\r\n    name: \"NFCS Interface Verification (CST)\",\r\n    status: Status.PASS,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"5.121\",\r\n    name: \"Registry Configuration Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"5.223\",\r\n    name: \"IP Configuration Verification\",\r\n    status: Status.FAIL,\r\n    category: Categories.CONFIG,\r\n    splitStatus: {\r\n      ApplicationServer: { status: Status.PASS },\r\n      DatabaseServer: { status: Status.RESOLVED },\r\n      PCWS1: { status: Status.WORKAROUND },\r\n      PCWS2: { status: Status.FAIL },\r\n      PCWS3: { status: Status.PASS }\r\n    }\r\n  },\r\n  {\r\n    number: \"5.24\",\r\n    name: \"Services Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"5.25\",\r\n    name: \"Ownship Configuration Verification\",\r\n    status: Status.FAIL,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"5.26\",\r\n    name: \"Overlays Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"5.27\",\r\n    name: \"AIF Management Web page Accessibility Verification\",\r\n    status: Status.RESOLVED,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"52.8\",\r\n    name: \"LINK11 Configuration and Interface Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.21\",\r\n    name: \"DNS Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.22.1\",\r\n    name: \"Aegis /etc/hosts Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.22.2\",\r\n    name: \"Start Tracks Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"6.22.3\",\r\n    name: \"Start Aegis-GL Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"6.22.4\",\r\n    name: \"GCCS-M/Aegis Display System (ADS) Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"62.3\",\r\n    name: \"Adaptor NAVSSI Configuration Verification\",\r\n    status: Status.RESOLVED,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.24\",\r\n    name: \"CADRT/TDSS via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.25\",\r\n    name: \"SSEE using ESPRIT via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.26\",\r\n    name: \"COMMS Interface Verification (CST)\",\r\n    status: Status.FAIL,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"62.7\",\r\n    name: \"NFCS Interface Verification (CST)\",\r\n    status: Status.PASS,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"2s1\",\r\n    name: \"Aegis /etc/hosts Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"2a2\",\r\n    name: \"Start Tracks Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"223\",\r\n    name: \"Start Aegis-GL Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"242\",\r\n    name: \"GCCS-M/Aegis Display System (ADS) Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"263\",\r\n    name: \"Adaptor NAVSSI Configuration Verification\",\r\n    status: Status.RESOLVED,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"624\",\r\n    name: \"CADRT/TDSS via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"652\",\r\n    name: \"SSEE using ESPRIT via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"626\",\r\n    name: \"COMMS Interface Verification (CST)\",\r\n    status: Status.FAIL,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"672\",\r\n    name: \"NFCS Interface Verification (CST)\",\r\n    status: Status.PASS,\r\n    category: Categories.MISC\r\n  },\r\n\r\n  {\r\n    number: \"26.21\",\r\n    name: \"DNS Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"36.22.1\",\r\n    name: \"Aegis /etc/hosts Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"46.22.2\",\r\n    name: \"Start Tracks Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"56.22.3\",\r\n    name: \"Start Aegis-GL Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"66.22.4\",\r\n    name: \"GCCS-M/Aegis Display System (ADS) Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"6662.3\",\r\n    name: \"Adaptor NAVSSI Configuration Verification\",\r\n    status: Status.RESOLVED,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.254\",\r\n    name: \"CADRT/TDSS via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.5425\",\r\n    name: \"SSEE using ESPRIT via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"6.2546\",\r\n    name: \"COMMS Interface Verification (CST)\",\r\n    status: Status.FAIL,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"62.547\",\r\n    name: \"NFCS Interface Verification (CST)\",\r\n    status: Status.PASS,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"2s541\",\r\n    name: \"Aegis /etc/hosts Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"2a542\",\r\n    name: \"Start Tracks Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"22543\",\r\n    name: \"Start Aegis-GL Adapter Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"24542\",\r\n    name: \"GCCS-M/Aegis Display System (ADS) Verification\",\r\n    status: Status.PASS,\r\n    category: Categories.SERVICES\r\n  },\r\n  {\r\n    number: \"26543\",\r\n    name: \"Adaptor NAVSSI Configuration Verification\",\r\n    status: Status.RESOLVED,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"62544\",\r\n    name: \"CADRT/TDSS via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"23652\",\r\n    name: \"SSEE using ESPRIT via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"62346\",\r\n    name: \"COMMS Interface Verification (CST)\",\r\n    status: Status.FAIL,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"67432\",\r\n    name: \"NFCS Interface Verification (CST)\",\r\n    status: Status.PASS,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"236512\",\r\n    name: \"SSEE using ESPRIT via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"623416\",\r\n    name: \"COMMS Interface Verification (CST)\",\r\n    status: Status.FAIL,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"674132\",\r\n    name: \"NFCS Interface Verification (CST)\",\r\n    status: Status.PASS,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"123652\",\r\n    name: \"SSEE using ESPRIT via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"612346\",\r\n    name: \"COMMS Interface Verification (CST)\",\r\n    status: Status.FAIL,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"617432\",\r\n    name: \"NFCS Interface Verification (CST)\",\r\n    status: Status.PASS,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"11652\",\r\n    name: \"SSEE using ESPRIT via Serial Verification\",\r\n    status: Status.WORKAROUND,\r\n    category: Categories.CONFIG\r\n  },\r\n  {\r\n    number: \"62116\",\r\n    name: \"COMMS Interface Verification (CST)\",\r\n    status: Status.FAIL,\r\n    category: Categories.MISC\r\n  },\r\n  {\r\n    number: \"61112\",\r\n    name: \"NFCS Interface Verification (CST)\",\r\n    status: Status.PASS,\r\n    category: Categories.MISC\r\n  }\r\n];\r\n\r\nconst categoryElementHeight = 25; //height of the category element in pdf\r\nconst printMarginX = 15; //to keep elements from being cut off when printing\r\nconst printMarginY = 10; //to keep elements from being cut off when printing\r\nconst testOffsetMargin = 10; //how much further right the tests are from the category header\r\nconst centerTextX = 420; //blaze it. actually the center of the screen\r\nconst headerTextY = 30; //lowest y value on page that doesn't cut off the top of text\r\nconst firstPageOffsetY = 145; //how far down the first page to put the first test (height of all the elements before it)\r\n\r\n//900 is the best value I've found for one page (closest to bottom that never cuts text)\r\nconst PAGEHEIGHT = 900; //if tests are being cut off, lowering this should fix, but is mostly likely due to another offset\r\n\r\nclass Report extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //save the full set\r\n    this.fullDataSet = this.props.data || data;\r\n    this.toolbarValues = this.getToolbarValues();\r\n\r\n    this.state = {\r\n      page: null,\r\n      data: this.props.data || data,\r\n      expandAll: false\r\n    };\r\n  }\r\n\r\n  changePage = page => {\r\n    if (page === null) {\r\n      //changing back to main page\r\n      this.setState({\r\n        page: page,\r\n        data: this.fullDataSet\r\n      });\r\n    } else {\r\n      let filteredData = [...this.state.data];\r\n      filteredData = filteredData.filter(test => {\r\n        return test.status === page;\r\n      });\r\n      console.log(filteredData);\r\n      this.setState({\r\n        page: page,\r\n        data: filteredData\r\n      });\r\n    }\r\n  };\r\n\r\n  //Needs to recreate LI's or reuse the remaining LI's\r\n  unwrap = el => {\r\n    // get the element's parent node\r\n    var parent = el.parentNode;\r\n\r\n    // move all children out of the element\r\n    while (el.firstChild) parent.insertBefore(el.firstChild, el);\r\n\r\n    // remove the empty element\r\n    parent.removeChild(el);\r\n  };\r\n\r\n  // Needs to clean up LI elements after putting them all into one OR unwrap needs to insert them back into the LI\r\n  wrapAll = (elms, wrapper) => {\r\n    var el = elms.length ? elms[0] : elms;\r\n\r\n    // Cache the current parent and sibling of the first element.\r\n    var parent = el.parentNode;\r\n    var sibling = el.nextSibling;\r\n\r\n    // Wrap the first element (is automatically removed from its\r\n    // current parent).\r\n    wrapper.appendChild(el);\r\n\r\n    // Wrap all other elements (if applicable). Each element is\r\n    // automatically removed from its current parent and from the elms\r\n    // array.\r\n    while (elms.length) {\r\n      wrapper.appendChild(elms.shift());\r\n    }\r\n\r\n    // If the first element had a sibling, insert the wrapper before the\r\n    // sibling to maintain the HTML structure; otherwise, just append it\r\n    // to the parent.\r\n    if (sibling) {\r\n      parent.insertBefore(wrapper, sibling);\r\n    } else {\r\n      parent.appendChild(wrapper);\r\n    }\r\n  };\r\n\r\n  //   exportPdf = () => {\r\n  //     const filename = \"DiagnosticReport.pdf\";\r\n\r\n  //     // first expand the tests so that the pdf includes the full report\r\n  //     this.expandAllTests();\r\n\r\n  //     const testElems = document.getElementsByClassName(\"test\"); //array of every test\r\n  //     const promises = [];\r\n  //     let elems = [];\r\n  //     let pageHeight = firstPageOffsetY;\r\n  //     let pdf = new jsPDF(\"l\", \"pt\", \"a4\");\r\n\r\n  //     //create the header and toolbar\r\n  //     pdf.setFontStyle(\"bold\");\r\n  //     pdf.text(\"Diagnostic Report\", centerTextX, headerTextY, {\r\n  //       align: \"center\"\r\n  //     });\r\n  //     const toolbar = document.querySelector(\".toolbar\");\r\n  //     let p = html2canvas(toolbar, { scale: 0.75 });\r\n  //     promises.push(p);\r\n\r\n  //     //loop through Categories,\r\n  //     //filter testElems for category,\r\n  //     //loop through all the filtered elems,\r\n  //     //include the pageElems loop as a part of this because then the categories will start on new pages\r\n  //     for (let c in Categories) {\r\n  //       let categoryElems = [...testElems].filter(elem => {\r\n  //         return (\r\n  //           elem.parentElement.parentElement.parentElement.id === Categories[c]\r\n  //         );\r\n  //       });\r\n\r\n  //       //create the category element without getting all the tests with it\r\n  //       const header = document.getElementById(Categories[c]);\r\n  //       const testListElem = header.childNodes[header.childNodes.length - 1]; //list of tests\r\n  //       let canvas = document.createElement(\"canvas\");\r\n  //       canvas.setAttribute(\"id\", \"categoryTitle\"); //uses an id to flag this as a category header and not a page of tests\r\n  //       p = html2canvas(header, {\r\n  //         scale: 1,\r\n  //         canvas,\r\n  //         ignoreElements: element => {\r\n  //           return element === testListElem || testListElem.contains(element);\r\n  //         }\r\n  //       });\r\n  //       promises.push(p);\r\n\r\n  //       //offset the height of category\r\n  //       pageHeight += categoryElementHeight;\r\n\r\n  //       //loop through elements in this category and group together in pages\r\n  //       for (let e in categoryElems) {\r\n  //         let height = categoryElems[e].clientHeight;\r\n\r\n  //         if (pageHeight + height >= PAGEHEIGHT) {\r\n  //           // this element wont fit on this page\r\n  //           let wrapper = document.createElement(\"span\");\r\n  //           wrapper.setAttribute(\"class\", \"pdfpage\" + Categories[c]);\r\n  //           this.wrapAll(elems, wrapper); // wraps all the elements in one span to be rendered into a page\r\n  //           pageHeight = 0;\r\n  //           elems = []; //start new page of elements\r\n  //         }\r\n  //         elems.push(categoryElems[e]);\r\n  //         pageHeight += height;\r\n  //       }\r\n\r\n  //       //if there are still leftover elements, wrap the remainders\r\n  //       if (elems.length > 0) {\r\n  //         let wrapper = document.createElement(\"span\");\r\n  //         wrapper.setAttribute(\"class\", \"pdfpage\" + Categories[c]);\r\n  //         this.wrapAll(elems, wrapper);\r\n  //       }\r\n\r\n  //       // render each page as a canvas\r\n  //       const pageElems = document.getElementsByClassName(\r\n  //         \"pdfpage\" + Categories[c]\r\n  //       ); //grab all the groups of elements\r\n  //       for (let i = 0; i < pageElems.length; i++) {\r\n  //         let p = html2canvas(pageElems[i], {\r\n  //           scale: 0.8,\r\n  //           letterRendering: true\r\n  //         }); //creates a canvas with grouped tests\r\n  //         promises.push(p);\r\n  //       }\r\n  //       elems = [];\r\n  //       pageHeight = 0;\r\n  //     }\r\n\r\n  //     console.log(promises);\r\n  //     let titleOffset = 0;\r\n  //     Promise.all(promises)\r\n  //       .then(values => {\r\n  //         for (let i = 0; i < values.length; i++) {\r\n  //           let canvasUrl = values[i].toDataURL(\"image/jpeg\", 1.0);\r\n  //           // The first page is crafted with custom values, after 1st page it is all the same\r\n  //           if (i === 0) {\r\n  //             pdf.addImage(canvasUrl, \"JPEG\", 0, headerTextY + 10); //add toolbar with 10px margin\r\n  //             pdf.setFontStyle(\"italic\");\r\n  //             pdf.text(\r\n  //               \"Analysis\",\r\n  //               centerTextX,\r\n  //               headerTextY + 10 + values[i].height,\r\n  //               { align: \"center\" }\r\n  //             ); //add analysis text just below that\r\n  //           } else if (i === 1) {\r\n  //             //add first category header using first page offset\r\n  //             pdf.addImage(canvasUrl, \"JPEG\", printMarginX, firstPageOffsetY);\r\n  //           } else if (i === 2) {\r\n  //             //add first test page after that\r\n  //             pdf.addImage(\r\n  //               canvasUrl,\r\n  //               \"JPEG\",\r\n  //               printMarginX + testOffsetMargin,\r\n  //               firstPageOffsetY + categoryElementHeight\r\n  //             );\r\n  //             pdf.addPage(\"a4\", \"l\");\r\n  //           }\r\n\r\n  //           // After 1st page, can loop through this for however many categories\r\n  //           else {\r\n  //             if (values[i].id === \"categoryTitle\") {\r\n  //               //category header\r\n  //               pdf.addImage(canvasUrl, \"JPEG\", printMarginX, printMarginY);\r\n  //               titleOffset = categoryElementHeight;\r\n  //             } else {\r\n  //               pdf.addImage(\r\n  //                 canvasUrl,\r\n  //                 \"JPEG\",\r\n  //                 printMarginX + testOffsetMargin,\r\n  //                 printMarginY + titleOffset\r\n  //               );\r\n  //               pdf.addPage(\"a4\", \"l\");\r\n  //               titleOffset = 0; //no longer a page starting with category so reset\r\n  //             }\r\n  //           }\r\n  //         }\r\n\r\n  //         pdf.deletePage(pdf.internal.getNumberOfPages()); //delete the extra page at the end\r\n  //         pdf.save(filename);\r\n\r\n  //         //clean up the grouped elements created for pdf purposes\r\n  //         for (let c in Categories) {\r\n  //           const wrappers = document.getElementsByClassName(\r\n  //             \"pdfpage\" + Categories[c]\r\n  //           );\r\n  //           if (wrappers) {\r\n  //             while (wrappers.length > 0) {\r\n  //               this.unwrap(wrappers[0]);\r\n  //             }\r\n  //           }\r\n  //         }\r\n  //       })\r\n  //       .catch(e => console.error(e));\r\n  //   };\r\n\r\n  expandAllTests = () => {\r\n    this.setState({\r\n      expandAll: true\r\n    });\r\n  };\r\n\r\n  getToolbarValues = () => {\r\n    let result = {};\r\n    for (let s in Status) {\r\n      const data = this.fullDataSet.filter(test => {\r\n        return test.status === Status[s];\r\n      });\r\n      result[Status[s]] = data.length;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"report\">\r\n        <header className=\"header\">\r\n          <h1 onClick={this.expandAllTests}>Diagnostic Report</h1>\r\n          <span className=\"export\">\r\n            <i className=\"fa fa-share-alt-square fa-2x\" />\r\n          </span>\r\n        </header>\r\n        <div className=\"toolbar\">\r\n          <ResultQuickview\r\n            values={this.toolbarValues}\r\n            page={this.state.page}\r\n            changePage={this.changePage}\r\n          />\r\n        </div>\r\n        <Analysis tests={this.state.data} expandAll={this.state.expandAll} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Report;\r\n","const fetchFields = {\r\n  mode: \"cors\", // no-cors, cors, *same-origin\r\n  cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n  credentials: \"same-origin\", // include, *same-origin, omit\r\n  redirect: \"follow\", // manual, *follow, error\r\n  referrer: \"no-referrer\" // no-referrer, *client\r\n};\r\nexport async function post(url, data) {\r\n  // Default options are marked with *\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    ...fetchFields,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n  }); // parses response to JSON\r\n}\r\nexport async function get(url) {\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n    ...fetchFields,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  });\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass NumberField extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: 0\r\n        }\r\n    }\r\n\r\n    validateChange = (e) =>{\r\n        e.preventDefault();\r\n        const value = e.target.value\r\n        if(!isNaN(value)){\r\n            if(!this.props.maxLength || (this.props.maxLength && value / Math.pow(10,this.props.maxLength) < 1)) {\r\n                this.setState({value})\r\n                this.props.updateValue(this.props.name, value)\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const field = this.props.name\r\n        const reason = this.props.reason\r\n        return <tr>\r\n            <td className=\"textbox\">\r\n                <input id={field} className=\"form-field\" placeholder={field} value={this.state.value}\r\n                       onChange={(e) => this.validateChange(e)\r\n                }/>\r\n                <label htmlFor={field} className=\"form-label\">{field}</label></td>\r\n            <td><span className=\"reason\">{reason}</span></td>\r\n        </tr>\r\n    }\r\n}\r\nexport default NumberField","import React, { Component } from 'react';\r\n\r\nclass IPField extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: \"100.100.100.100\"\r\n        }\r\n    }\r\n\r\n    validateChange = (e) =>{\r\n        e.preventDefault();\r\n        const value = e.target.value\r\n        //ip regex\r\n        if(/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/.test(value)){\r\n            this.setState({value})\r\n            this.props.updateValue(this.props.name, value)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const field = this.props.name\r\n        const reason = this.props.reason\r\n        return <tr>\r\n            <td className=\"textbox\">\r\n                <input id={field} className=\"form-field\" placeholder={field} value={this.state.value}\r\n                       onChange={(e) => this.validateChange(e)\r\n                       }/>\r\n                <label htmlFor={field} className=\"form-label\">{field}</label></td>\r\n            <td className=\"reason\">{reason}</td>\r\n        </tr>\r\n    }\r\n}\r\nexport default IPField","import React, { Component } from 'react';\r\n\r\nclass ClassificationField extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    validateChange = (e) =>{\r\n        e.preventDefault()\r\n        //theres no way for this to be invalid since its a fixed list\r\n        this.props.updateValue(this.props.name, e.target.value)\r\n    }\r\n\r\n    render(){\r\n        const field = this.props.name\r\n        const reason = this.props.reason\r\n        return <tr>\r\n            <td className=\"textbox\">\r\n                <div className=\"form-input-select\">\r\n                    <select required onChange={(e) => this.validateChange(e)}>\r\n                        <option value=\"\"\r\n                                hidden\r\n                        >{field}</option>\r\n\r\n                        <option value=\"UNCLASSIFIED\">Unclassified</option>\r\n                        <option value=\"RESTRICTED\">Restricted</option>\r\n                        <option value=\"CONFIDENTIAL\">Confidential</option>\r\n                        <option value=\"SECRET\">Secret</option>\r\n                        <option value=\"TOP SECRET\">Top Secret</option>\r\n                    </select>\r\n                </div></td>\r\n            <td className=\"reason\">{reason}</td>\r\n        </tr>\r\n    }\r\n}\r\nexport default ClassificationField","import React, { Component } from 'react';\r\n\r\nclass BooleanField extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    validateChange = (e) =>{\r\n        e.preventDefault()\r\n        //theres no way for this to be invalid since its a fixed list\r\n        this.props.updateValue(this.props.name, e.target.value)\r\n    }\r\n\r\n    render(){\r\n        const field = this.props.name\r\n        const reason = this.props.reason\r\n        const trueAdj = this.props.trueAdj //if you wanted to pass a custom meaning for true/false\r\n        const falseAdj = this.props.falseAdj\r\n        return <tr>\r\n            <td className=\"textbox\">\r\n                <div className=\"form-input-select\">\r\n                    <select required onChange={(e) => this.validateChange(e)}>\r\n                        <option value=\"\"\r\n                                hidden\r\n                        >{field}</option>\r\n\r\n                        <option value=\"true\">{trueAdj ? trueAdj : \"Enabled\"}</option>\r\n                        <option value=\"false\">{falseAdj ? falseAdj : \"Disabled\"}</option>\r\n                    </select>\r\n                </div></td>\r\n            <td><span className=\"reason\">{reason}</span></td>\r\n        </tr>\r\n    }\r\n}\r\nexport default BooleanField","import React, { Component } from \"react\";\r\nimport Report from \"./report/report\";\r\nimport * as HttpUtils from \"./utils/HttpUtils\";\r\nimport \"./App.css\";\r\nimport { HttpConstants, Endpoints } from \"./utils/constants\";\r\nimport NumberField from \"./configFields/NumberField\";\r\nimport IPField from \"./configFields/IPField\";\r\nimport ClassificationField from \"./configFields/ClassificationField\";\r\nimport BooleanField from \"./configFields/BooleanField\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      server: \"APP Server\",\r\n      config: {},\r\n      testsDone: false,\r\n      testsInitiated: false,\r\n      testData: null,\r\n      invalidFormMsg: \"\"\r\n    };\r\n  }\r\n\r\n  getConfigFields() {\r\n    let url =\r\n      HttpConstants.LOCALHOST + window.location.port + Endpoints.GET_CONFIG;\r\n\r\n    HttpUtils.get(url)\r\n      .then(response => response.json())\r\n      .then(config => {\r\n        if (config) {\r\n          this.setState({\r\n            config: config.userConfigFields,\r\n            server: config.serverType\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getConfigFields();\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  exit = async e => {\r\n    e.preventDefault();\r\n\r\n    let url = HttpConstants.LOCALHOST + window.location.port + Endpoints.EXIT;\r\n\r\n    HttpUtils.post(url, {})\r\n      .then(response => response.json)\r\n      .then(results => {})\r\n      .catch(error => console.log(error));\r\n\r\n    window.close();\r\n  };\r\n\r\n  runTests = async e => {\r\n    e.preventDefault();\r\n\r\n    // verify fields\r\n//    let msg = \"\";\r\n//    Object.keys(this.state.config).map(key => {\r\n//      if (key && this.state.config[key]) {\r\n//        if (!this.state.config[key].value) {\r\n//          msg += \"The \" + key + \" field is required\\n\";\r\n//        }\r\n//      }\r\n//    });\r\n//    if (msg != \"\") {\r\n//      this.setState({ invalidFormMsg: msg });\r\n//      return;\r\n//    }\r\n\r\n    this.setState({ testsInitiated: true });\r\n\r\n\r\n    let url =\r\n      HttpConstants.LOCALHOST + window.location.port + Endpoints.INITIATE_TESTS;\r\n\r\n    HttpUtils.post(url, this.state.config)\r\n      .then(response => response.json())\r\n      .then(results => {\r\n        this.setState({\r\n          testsDone: true,\r\n          testData: results,\r\n          testsInitiated: false\r\n        });\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  updateValue = (name, value) => {\r\n    this.setState({\r\n      config: {\r\n        ...this.state.config,\r\n        [name]: { ...this.state.config[name], value: value }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const config = this.state.config;\r\n    if (!this.state.testsDone)\r\n      return (\r\n        <div className=\"config\">\r\n          <header>\r\n            <h1>Local Configuration</h1>\r\n            <span className=\"exit\" onClick={this.exit}>\r\n              Exit\r\n            </span>\r\n            <span className=\"runTests\" onClick={this.runTests}>\r\n              Run Tests\r\n            </span>\r\n          </header>\r\n          <div className=\"server\">\r\n            <b>{this.state.server}</b>\r\n        </div>\r\n        <ul style={{listStyleType: \"none\", color: \"red\"}}>\r\n            {this.state.invalidFormMsg ? this.state.invalidFormMsg.split(\"\\n\").map((msg)=>{\r\n                return <li>{msg}</li>\r\n            }) : null\r\n            }\r\n        </ul>\r\n        <table className=\"entries\">\r\n          <tbody>\r\n            {Object.keys(config).map((key) => {\r\n                if(key && config[key])\r\n                    switch(config[key].fieldType.toLowerCase()){\r\n                        case \"classification\":\r\n                            return <ClassificationField name={key} reason={config[key].description} updateValue={this.updateValue}/>\r\n                        case \"boolean\":\r\n                            return <BooleanField name={key} reason={config[key].description} updateValue={this.updateValue}/>\r\n                        case \"ip\":\r\n                            return <IPField name={key} reason={config[key].description} updateValue={this.updateValue}/>\r\n                        case \"port\":\r\n                            return <NumberField name={key} reason={config[key].description} maxLength={5} updateValue={this.updateValue}/>\r\n                        case \"number\":\r\n                            return <NumberField name={key} reason={config[key].description} updateValue={this.updateValue}/>\r\n                        default:\r\n                            return <tr key={key}>\r\n                                        <td className=\"textbox\">\r\n                                            <input id={key} className=\"form-field\" placeholder={key}\r\n                                                   onChange={(e) => this.setState({\r\n                                                                               config: {\r\n                                                                                   ...this.state.config,\r\n                                                                                   [key]: {...this.state.config[key],\r\n                                                                                       value: config[key].value}\r\n                                                                           }})}/>\r\n                                            <label htmlFor={key} className=\"form-label\">{key}</label></td>\r\n                                        <td><span className=\"reason\">{config[key].description}</span></td>\r\n                                    </tr>\r\n                    }\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          {this.state.testsInitiated ? (\r\n            <span>\r\n              <p>\r\n                <b>\r\n                  <i>Running Tests</i>\r\n                </b>\r\n              </p>\r\n              <div className=\"lds-ring\">\r\n                <div />\r\n                <div />\r\n                <div />\r\n                <div />\r\n              </div>\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n      );\r\n    else return <Report data={this.state.testData} />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}