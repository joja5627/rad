group 'rad-platform'
version '0.01'

buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "https://plugins.gradle.org/m2/" }

    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }

}

apply plugin: "com.moowork.node"
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


sourceCompatibility = 1.8

project.ext {
    seleniumVersion = '3.+'
}


repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }


}
configurations {
    providedRuntime
}



// Used for parallel testingF
//test {
//    maxParallelForks = 3
//}

dependencies {


    compileOnly 'org.projectlombok:lombok:1.18.4'
    testCompileOnly 'org.projectlombok:lombok:1.18.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.4'


    implementation 'org.seleniumhq.selenium:selenium-java:3.11.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'



    node {
        version = '8.11.0'
        download = true
        nodeModulesDir = file("${project.projectDir}/frontend")
    }

    task webpack(type: YarnTask, dependsOn: yarn) {
        args = ['build']
    }

    task moveJStoSpring(type: Copy) {
        from "${project.projectDir}/frontend/build/"
        into "${project.projectDir}/src/main/resources/static/"
    }

    moveJStoSpring.dependsOn 'webpack'
    processResources.dependsOn 'moveJStoSpring'

// ./gradlew bootRun '-Dspring.profiles.active=prod'

// ./gradlew bootRun '-Dspring.profiles.active=dev'

// ./gradlew bootRun '-Dspring.profiles.active=test'

    bootRun {
        systemProperties = System.properties
    }
}